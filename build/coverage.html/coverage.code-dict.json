{"/home/travis/build/npmtest/node-npmtest-bootstrap-loader/test.js":"/* istanbul instrument in package npmtest_bootstrap_loader */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-bootstrap-loader/lib.npmtest_bootstrap_loader.js":"/* istanbul instrument in package npmtest_bootstrap_loader */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_bootstrap_loader = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_bootstrap_loader = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-bootstrap-loader/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-bootstrap-loader && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_bootstrap_loader */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_bootstrap_loader\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_bootstrap_loader.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_bootstrap_loader.rollup.js'] =\n            local.assetsDict['/assets.npmtest_bootstrap_loader.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_bootstrap_loader.__dirname + '/lib.npmtest_bootstrap_loader.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-bootstrap-loader/node_modules/bootstrap-loader/loader.js":"// eslint-disable-next-line import/no-webpack-loader-syntax\nmodule.exports = require('./lib/bootstrap.loader!./no-op.js');\n","/home/travis/build/npmtest/node-npmtest-bootstrap-loader/node_modules/bootstrap-loader/extractStyles.js":"// eslint-disable-next-line import/no-webpack-loader-syntax\nrequire('./lib/bootstrap.loader?extractStyles!./no-op.js');\n","/home/travis/build/npmtest/node-npmtest-bootstrap-loader/node_modules/bootstrap-loader/no-op.js":"module.exports = {};\n","/home/travis/build/npmtest/node-npmtest-bootstrap-loader/node_modules/bootstrap-loader/lib/bootstrap.config.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createConfig;\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _fs = require('fs');\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nvar _jsYaml = require('js-yaml');\n\nvar _jsYaml2 = _interopRequireDefault(_jsYaml);\n\nvar _stripJsonComments = require('strip-json-comments');\n\nvar _stripJsonComments2 = _interopRequireDefault(_stripJsonComments);\n\nvar _fileExists = require('./utils/fileExists');\n\nvar _fileExists2 = _interopRequireDefault(_fileExists);\n\nvar _selectModules = require('./utils/selectModules');\n\nvar _selectModules2 = _interopRequireDefault(_selectModules);\n\nvar _selectUserModules = require('./utils/selectUserModules');\n\nvar _selectUserModules2 = _interopRequireDefault(_selectUserModules);\n\nvar _getEnvProp = require('./utils/getEnvProp');\n\nvar _getEnvProp2 = _interopRequireDefault(_getEnvProp);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* ======= Fetching config */\n\nvar DEFAULT_VERSION = 3;\nvar SUPPORTED_VERSIONS = [3, 4];\nvar CONFIG_FILE = '.bootstraprc';\n\nfunction resolveDefaultConfigPath(bootstrapVersion) {\n  return _path2.default.resolve(__dirname, '../' + CONFIG_FILE + '-' + bootstrapVersion + '-default');\n}\n\nfunction parseConfigFile(configFilePath) {\n  var configContent = (0, _stripJsonComments2.default)(_fs2.default.readFileSync(configFilePath, 'utf8'));\n  try {\n    return _jsYaml2.default.safeLoad(configContent);\n  } catch (YAMLException) {\n    throw new Error('Config file cannot be parsed: ' + configFilePath + '\\'');\n  }\n}\n\nfunction readDefaultConfig() {\n  var configFilePath = resolveDefaultConfigPath(DEFAULT_VERSION);\n  var defaultConfig = parseConfigFile(configFilePath);\n\n  return {\n    defaultConfig: defaultConfig,\n    configFilePath: configFilePath\n  };\n}\n\n// default location .bootstraprc\nfunction defaultUserConfigPath() {\n  return _path2.default.resolve(__dirname, '../../../' + CONFIG_FILE);\n}\n\nfunction readUserConfig(customConfigFilePath) {\n  var userConfig = parseConfigFile(customConfigFilePath);\n\n  var bootstrapVersion = userConfig.bootstrapVersion;\n\n\n  if (!bootstrapVersion) {\n    throw new Error('\\nBootstrap version not found in your \\'.bootstraprc\\'.\\nMake sure it\\'s set to 3 or 4. Like this:\\n  bootstrapVersion: 4\\n    ');\n  }\n\n  if (SUPPORTED_VERSIONS.indexOf(parseInt(bootstrapVersion, 10)) === -1) {\n    throw new Error('\\nUnsupported Bootstrap version in your \\'.bootstraprc\\'.\\nMake sure it\\'s set to 3 or 4. Like this:\\n  bootstrapVersion: 4\\n    ');\n  }\n\n  var defaultConfigFilePath = resolveDefaultConfigPath(bootstrapVersion);\n  var defaultConfig = parseConfigFile(defaultConfigFilePath);\n\n  return {\n    userConfig: userConfig,\n    defaultConfig: defaultConfig\n  };\n}\n\n/* ======= Exports */\nfunction createConfig(_ref) {\n  var extractStyles = _ref.extractStyles,\n      customConfigFilePath = _ref.customConfigFilePath;\n\n  // .bootstraprc-{3,4}-default, per the DEFAULT_VERSION\n  // otherwise read user provided config file\n  var userConfigFilePath = null;\n  if (customConfigFilePath) {\n    userConfigFilePath = _path2.default.resolve(__dirname, customConfigFilePath);\n  } else {\n    var defaultLocationUserConfigPath = defaultUserConfigPath();\n    if ((0, _fileExists2.default)(defaultLocationUserConfigPath)) {\n      userConfigFilePath = defaultLocationUserConfigPath;\n    }\n  }\n\n  if (!userConfigFilePath) {\n    var _readDefaultConfig = readDefaultConfig(),\n        _defaultConfig = _readDefaultConfig.defaultConfig,\n        _configFilePath = _readDefaultConfig.configFilePath;\n\n    return {\n      bootstrapVersion: parseInt(_defaultConfig.bootstrapVersion, 10),\n      loglevel: _defaultConfig.loglevel,\n      useFlexbox: _defaultConfig.useFlexbox,\n      preBootstrapCustomizations: _defaultConfig.preBootstrapCustomizations,\n      bootstrapCustomizations: _defaultConfig.bootstrapCustomizations,\n      appStyles: _defaultConfig.appStyles,\n      useCustomIconFontPath: _defaultConfig.useCustomIconFontPath,\n      extractStyles: extractStyles || (0, _getEnvProp2.default)('extractStyles', _defaultConfig),\n      styleLoaders: (0, _getEnvProp2.default)('styleLoaders', _defaultConfig),\n      styles: (0, _selectModules2.default)(_defaultConfig.styles),\n      scripts: (0, _selectModules2.default)(_defaultConfig.scripts),\n      configFilePath: _configFilePath\n    };\n  }\n\n  var configFilePath = userConfigFilePath;\n\n  var _readUserConfig = readUserConfig(configFilePath),\n      userConfig = _readUserConfig.userConfig,\n      defaultConfig = _readUserConfig.defaultConfig;\n\n  var configDir = _path2.default.dirname(configFilePath);\n  var preBootstrapCustomizations = userConfig.preBootstrapCustomizations && _path2.default.resolve(configDir, userConfig.preBootstrapCustomizations);\n  var bootstrapCustomizations = userConfig.bootstrapCustomizations && _path2.default.resolve(configDir, userConfig.bootstrapCustomizations);\n  var appStyles = userConfig.appStyles && _path2.default.resolve(configDir, userConfig.appStyles);\n\n  return {\n    bootstrapVersion: parseInt(userConfig.bootstrapVersion, 10),\n    loglevel: userConfig.loglevel,\n    preBootstrapCustomizations: preBootstrapCustomizations,\n    bootstrapCustomizations: bootstrapCustomizations,\n    appStyles: appStyles,\n    disableSassSourceMap: userConfig.disableSassSourceMap,\n    disableResolveUrlLoader: userConfig.disableResolveUrlLoader,\n    useFlexbox: userConfig.useFlexbox,\n    useCustomIconFontPath: userConfig.useCustomIconFontPath,\n    extractStyles: extractStyles || (0, _getEnvProp2.default)('extractStyles', userConfig),\n    styleLoaders: (0, _getEnvProp2.default)('styleLoaders', userConfig),\n    styles: (0, _selectUserModules2.default)(userConfig.styles, defaultConfig.styles),\n    scripts: (0, _selectUserModules2.default)(userConfig.scripts, defaultConfig.scripts),\n    configFilePath: configFilePath\n  };\n}","/home/travis/build/npmtest/node-npmtest-bootstrap-loader/node_modules/bootstrap-loader/lib/utils/fileExists.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (file) {\n  try {\n    return _fs2.default.statSync(file).isFile();\n  } catch (error) {\n    return false;\n  }\n};\n\nvar _fs = require('fs');\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","/home/travis/build/npmtest/node-npmtest-bootstrap-loader/node_modules/bootstrap-loader/lib/utils/selectModules.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n/**\n * Turns Object with names of modules into Array of names of modules\n *\n * @param {Object} modules\n * @returns {string[]}\n */\nexports.default = function (modules) {\n  return Object.keys(modules).filter(function (module) {\n    return modules[module];\n  });\n};","/home/travis/build/npmtest/node-npmtest-bootstrap-loader/node_modules/bootstrap-loader/lib/utils/selectUserModules.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (userModules, defaultModules) {\n  if (!userModules || userModules.toString().toLowerCase() === 'false') return false;\n\n  if (typeof userModules === 'boolean') {\n    return (0, _selectModules2.default)(defaultModules);\n  }\n\n  return (0, _selectModules2.default)(userModules);\n};\n\nvar _selectModules = require('./selectModules');\n\nvar _selectModules2 = _interopRequireDefault(_selectModules);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","/home/travis/build/npmtest/node-npmtest-bootstrap-loader/node_modules/bootstrap-loader/lib/utils/getEnvProp.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (prop, config) {\n  if (prop in config) {\n    return config[prop];\n  }\n\n  var NODE_ENV = process.env.NODE_ENV;\n  var configEnvSection = config.env && config.env[NODE_ENV];\n\n  if (configEnvSection && prop in configEnvSection) {\n    return configEnvSection[prop];\n  }\n  return false;\n};","/home/travis/build/npmtest/node-npmtest-bootstrap-loader/node_modules/bootstrap-loader/lib/utils/buildExtractStylesLoader.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (loaders) {\n  var fallbackLoader = void 0;\n  if (loaders[0].startsWith('style')) {\n    fallbackLoader = 'style-loader';\n  } else if (loaders[0].startsWith('isomorphic-style')) {\n    fallbackLoader = 'isomorphic-style-loader';\n  } else {\n    throw new Error('\\nIf you want to use \\'extract-text-webpack-plugin\\', make sure\\nyour \\'styleLoaders\\' array starts with \\'style\\' or \\'isomorphic-style\\' at index 0.\\n    ');\n  }\n\n  var ExtractTextPlugin = void 0;\n  try {\n    // eslint-disable-next-line global-require\n    ExtractTextPlugin = require('extract-text-webpack-plugin');\n  } catch (error) {\n    throw new Error('\\nCould not find \\'extract-text-webpack-plugin\\' module.\\nMake sure it\\'s installed in your \\'node_modules/\\' directory.\\nError: ' + error + '\\n');\n  }\n  var restLoaders = loaders.slice(1).map(function (loader) {\n    return loader + '!';\n  }).join('');\n  return [ExtractTextPlugin.loader().loader + '?{\"omit\":1,\"remove\":true}', fallbackLoader, restLoaders].join('!');\n};","/home/travis/build/npmtest/node-npmtest-bootstrap-loader/node_modules/bootstrap-loader/lib/utils/checkBootstrapVersion.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (bootstrapVersion, bootstrapPath) {\n  var npmVersion = require(_path2.default.join(bootstrapPath, 'package.json')).version;\n\n  return {\n    version: npmVersion,\n    allGood: _semver2.default.major(npmVersion) === bootstrapVersion\n  };\n};\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _semver = require('semver');\n\nvar _semver2 = _interopRequireDefault(_semver);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","/home/travis/build/npmtest/node-npmtest-bootstrap-loader/node_modules/bootstrap-loader/lib/utils/createBootstrapImport.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (module, bootstrapVersion, bootstrapPath) {\n  var stylesPath = parseInt(bootstrapVersion, 10) === 3 ? ['assets', 'stylesheets', 'bootstrap'] : ['scss'];\n  var bootstrapModule = _path2.default.join.apply(_path2.default, [bootstrapPath].concat(stylesPath, ['_' + module]));\n  return '@import \"' + bootstrapModule + '\";';\n};\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","/home/travis/build/npmtest/node-npmtest-bootstrap-loader/node_modules/bootstrap-loader/lib/utils/createBootstrapRequire.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (module, bootstrapVersion, bootstrapPath) {\n  var scriptsPath = parseInt(bootstrapVersion, 10) === 3 ? ['assets', 'javascripts', 'bootstrap'] : ['js', 'dist'];\n  var bootstrapModule = _path2.default.join.apply(_path2.default, [bootstrapPath].concat(scriptsPath, [module]));\n  return 'require (' + JSON.stringify(bootstrapModule) + ');';\n};\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","/home/travis/build/npmtest/node-npmtest-bootstrap-loader/node_modules/bootstrap-loader/lib/utils/createRequire.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n/**\n * Creates Node require string\n *\n * @param {string} module\n * @returns {string}\n */\nexports.default = function (module) {\n  return \"require (\" + JSON.stringify(module) + \");\";\n};","/home/travis/build/npmtest/node-npmtest-bootstrap-loader/node_modules/bootstrap-loader/lib/utils/createUserImport.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (module, webpack) {\n  var userModule = _path2.default.relative(webpack.context, module);\n  webpack.addDependency(module);\n  return '@import \"' + userModule + '\";';\n};\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","/home/travis/build/npmtest/node-npmtest-bootstrap-loader/node_modules/bootstrap-loader/lib/utils/getFontsPath.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Builds path to Bootstrap fonts\n *\n * @param {string} bootstrapRelPath\n * @returns {string}\n */\nexports.default = function (bootstrapRelPath) {\n  return _path2.default.join(bootstrapRelPath, 'assets', 'fonts', 'bootstrap/');\n};","/home/travis/build/npmtest/node-npmtest-bootstrap-loader/node_modules/bootstrap-loader/lib/utils/joinLoaders.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (loaders) {\n  if (!Array.isArray(loaders)) {\n    throw new Error('\\n      Specify your loaders as an array.\\n      Default is [\\'style\\', \\'css\\', \\'scss\\']\\n    ');\n  }\n\n  return loaders.map(function (loader) {\n    return loader + '!';\n  }).join('');\n};","/home/travis/build/npmtest/node-npmtest-bootstrap-loader/node_modules/bootstrap-loader/lib/utils/logger.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _chalk = require('chalk');\n\nvar _chalk2 = _interopRequireDefault(_chalk);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } } /* eslint no-console: 0 */\n\n/**\n * Logger helper\n */\nexports.default = {\n\n  /**\n   * Logs output\n   *\n   * @param {...*} output\n   */\n  log: function log() {\n    var _console;\n\n    for (var _len = arguments.length, output = Array(_len), _key = 0; _key < _len; _key++) {\n      output[_key] = arguments[_key];\n    }\n\n    var prettyOutput = [_chalk2.default.yellow('[bootstrap-loader]: ')].concat(output, '\\n');\n    (_console = console).log.apply(_console, _toConsumableArray(prettyOutput));\n  },\n\n\n  /**\n   * Logs debug info\n   *\n   * @param {...*} output\n   */\n  debug: function debug() {\n    if (global.__DEBUG__) this.log.apply(this, arguments);\n  }\n};","/home/travis/build/npmtest/node-npmtest-bootstrap-loader/node_modules/bootstrap-loader/lib/utils/processModules.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (modules, bootstrapVersion, bootstrapPath, isScripts) {\n  var processModule = isScripts ? _createBootstrapRequire2.default : _createBootstrapImport2.default;\n\n  return modules.filter(function (module) {\n    return module !== 'mixins';\n  }).map(function (module) {\n    return processModule(module, bootstrapVersion, bootstrapPath);\n  });\n};\n\nvar _createBootstrapImport = require('./createBootstrapImport');\n\nvar _createBootstrapImport2 = _interopRequireDefault(_createBootstrapImport);\n\nvar _createBootstrapRequire = require('./createBootstrapRequire');\n\nvar _createBootstrapRequire2 = _interopRequireDefault(_createBootstrapRequire);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","/home/travis/build/npmtest/node-npmtest-bootstrap-loader/node_modules/bootstrap-loader/lib/utils/processStyleLoaders.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (_ref) {\n  var loaders = _ref.loaders,\n      disableSassSourceMap = _ref.disableSassSourceMap,\n      disableResolveUrlLoader = _ref.disableResolveUrlLoader;\n\n  if (!Array.isArray(loaders)) {\n    throw new Error('\\nSpecify your loaders as an array.\\nDefault is [\\'style\\', \\'css\\', \\'sass\\']\\n    ');\n  }\n\n  var loadersWithSuffix = ensureLoadersSuffix(loaders);\n\n  if (disableSassSourceMap && disableResolveUrlLoader) {\n    return loadersWithSuffix;\n  }\n\n  // We need to match user loaders in different formats:\n  // 'sass', 'sass-loader', 'sass?someParam' etc.\n  var getLoaderRegExp = function getLoaderRegExp(module) {\n    return new RegExp('^' + (0, _escapeRegexp2.default)(module) + '(?:-loader)?(?:\\\\?.*)?$');\n  };\n\n  var sassLoaderRegExp = getLoaderRegExp('sass');\n  var sassLoader = loadersWithSuffix.find(function (loader) {\n    return sassLoaderRegExp.test(loader);\n  });\n  var sassLoaderIndex = loadersWithSuffix.indexOf(sassLoader);\n\n  if (!disableSassSourceMap) {\n    if (!sassLoader) {\n      throw new Error('\\n        I can\\'t find \\'sass-loader\\'.\\n        Add it to array of loaders in .bootstraprc.\\n      ');\n    }\n\n    var sassLoaderQuery = sassLoader.split('?')[1];\n\n    // We need to check if user's loader already contains sourceMap param\n    // And if it's not there - inject it\n    var sassLoaderWithSourceMap = void 0;\n    if (sassLoaderQuery) {\n      sassLoaderWithSourceMap = sassLoaderQuery.includes('sourceMap') ? sassLoader : sassLoader + '&sourceMap';\n    } else {\n      sassLoaderWithSourceMap = sassLoader + '?sourceMap';\n    }\n\n    // eslint-disable-next-line no-param-reassign\n    loadersWithSuffix[sassLoaderIndex] = sassLoaderWithSourceMap;\n  }\n\n  if (!disableResolveUrlLoader) {\n    var resolveUrlLoaderRegExp = getLoaderRegExp('resolve-url');\n    var resolveUrlLoader = loadersWithSuffix.find(function (loader) {\n      return resolveUrlLoaderRegExp.test(loader);\n    });\n\n    if (!resolveUrlLoader) {\n      loadersWithSuffix.splice(sassLoaderIndex, 0, 'resolve-url-loader');\n    }\n  }\n\n  return loadersWithSuffix;\n};\n\nvar _escapeRegexp = require('escape-regexp');\n\nvar _escapeRegexp2 = _interopRequireDefault(_escapeRegexp);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Ensures '-loader' suffix for loaders in config for webpack compatibility\nvar ensureLoadersSuffix = function ensureLoadersSuffix(loadersArray) {\n  var loaderSuffixRegExp = new RegExp('^style-loader.*$|^css-loader.*$|^postcss-loader.*$|^sass-loader.*$|^resolve-url-loader.*$');\n  var suffixReplaceRegExp = new RegExp('^style|^css|^postcss|^sass|^resolve-url');\n  return loadersArray.map(function (loader) {\n    if (!loaderSuffixRegExp.test(loader)) {\n      return loader.replace(suffixReplaceRegExp, function (match) {\n        return match + '-loader';\n      });\n    }\n    return loader;\n  });\n};\n\n/**\n * Injects 'resolve-url-loader' and 'sourceMap' param for 'sass-loader'\n *\n * @param {string[]} loaders\n * @returns {string[]}\n */\n/*  */","/home/travis/build/npmtest/node-npmtest-bootstrap-loader/node_modules/bootstrap-loader/lib/utils/resolveModule.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (module) {\n  try {\n    var resolvedPath = void 0;\n    _resolve2.default.sync(module, {\n      packageFilter: function packageFilter(pkg, pathToModule) {\n        resolvedPath = pathToModule;\n        return pkg;\n      }\n    });\n    return resolvedPath;\n  } catch (error) {\n    _logger2.default.debug('resolveModule error is ', error);\n    return false;\n  }\n};\n\nvar _resolve = require('resolve');\n\nvar _resolve2 = _interopRequireDefault(_resolve);\n\nvar _logger = require('./logger');\n\nvar _logger2 = _interopRequireDefault(_logger);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }"}